@page "/clusters"
@inject IClusterService ClusterService

<PageTitle>Clusters | YARP-EE</PageTitle>

<div class="animate-fade-in">
    <!-- Header -->
    <div class="sm:flex sm:items-center sm:justify-between mb-6">
        <div>
            <h1 class="text-2xl font-semibold text-gray-900 dark:text-white">Clusters</h1>
            <p class="mt-2 text-sm text-gray-700 dark:text-gray-400">
                Manage your backend clusters and destination servers.
            </p>
        </div>
        <div class="mt-4 sm:mt-0">
            <button @onclick="() => ShowCreateDialog()" 
                    class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-accent-600 hover:bg-accent-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-accent-500">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                </svg>
                Add Cluster
            </button>
        </div>
    </div>

    <!-- Loading State -->
    @if (isLoading)
    {
        <div class="flex justify-center items-center h-64">
            <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-accent-600"></div>
        </div>
    }
    else if (errorMessage != null)
    {
        <!-- Error State -->
        <div class="rounded-md bg-red-50 dark:bg-red-900/20 p-4">
            <div class="flex">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                </div>
                <div class="ml-3">
                    <h3 class="text-sm font-medium text-red-800 dark:text-red-200">Error loading clusters</h3>
                    <div class="mt-2 text-sm text-red-700 dark:text-red-300">
                        <p>@errorMessage</p>
                    </div>
                </div>
            </div>
        </div>
    }
    else if (!clusters.Any())
    {
        <!-- Empty State -->
        <div class="text-center py-12">
            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01" />
            </svg>
            <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No clusters</h3>
            <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Get started by creating a new cluster.</p>
            <div class="mt-6">
                <button @onclick="() => ShowCreateDialog()" 
                        class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-accent-600 hover:bg-accent-700">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                    </svg>
                    New Cluster
                </button>
            </div>
        </div>
    }
    else
    {
        <!-- Clusters Grid -->
        <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
            @foreach (var cluster in clusters)
            {
                <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-lg rounded-lg hover:shadow-xl transition-shadow">
                    <div class="p-6">
                        <div class="flex items-center justify-between mb-4">
                            <h3 class="text-lg font-semibold text-gray-900 dark:text-white truncate">
                                @cluster.Name
                            </h3>
                            <div class="flex space-x-2">
                                <button @onclick="() => ShowEditDialog(cluster)" 
                                        class="text-gray-400 hover:text-accent-600 transition-colors">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                    </svg>
                                </button>
                                <button @onclick="() => ShowDeleteDialog(cluster)" 
                                        class="text-gray-400 hover:text-red-600 transition-colors">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                    </svg>
                                </button>
                            </div>
                        </div>

                        <div class="space-y-3">
                            <div class="flex items-center text-sm">
                                <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                                </svg>
                                <span class="text-gray-600 dark:text-gray-400">@cluster.LoadBalancingPolicy</span>
                            </div>

                            <div class="flex items-center text-sm">
                                <svg class="w-4 h-4 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01" />
                                </svg>
                                <span class="text-gray-600 dark:text-gray-400">
                                    @cluster.Destinations.Count @(cluster.Destinations.Count == 1 ? "destination" : "destinations")
                                </span>
                            </div>
                        </div>

                        @if (cluster.Destinations.Any())
                        {
                            <div class="mt-4 pt-4 border-t border-gray-200 dark:border-gray-700">
                                <h4 class="text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider mb-2">
                                    Destinations
                                </h4>
                                <div class="space-y-2">
                                    @foreach (var destination in cluster.Destinations.Take(3))
                                    {
                                        <div class="text-xs text-gray-600 dark:text-gray-400 truncate">
                                            @destination.Address
                                        </div>
                                    }
                                    @if (cluster.Destinations.Count > 3)
                                    {
                                        <div class="text-xs text-gray-500 dark:text-gray-500">
                                            +@(cluster.Destinations.Count - 3) more...
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<ClusterModel> clusters = new();
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        isLoading = true;
        errorMessage = null;

        try
        {
            clusters = await ClusterService.GetAllClustersAsync();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ShowCreateDialog()
    {
        // TODO: Implement create dialog
    }

    private void ShowEditDialog(ClusterModel cluster)
    {
        // TODO: Implement edit dialog
    }

    private void ShowDeleteDialog(ClusterModel cluster)
    {
        // TODO: Implement delete dialog
    }
}
